// ÜBUNG 1


type NameBirthDay = [string, Date]
type NameBirthDay2 = [string, number]

// ÜBUNG 2


const daysUntil = (param: NameBirthDay): number => {
    const today = new Date()
    const nextBday = new Date(new Date().getFullYear() + '-' + (param[1].getMonth() + 1) + '-' + param[1].getDate())
    const msec = (nextBday.getTime() - today.getTime())
    const days = (msec / 1000 / 60 / 60 / 24)
    return days
}


daysUntil(["lars", new Date(1994, 11, 16)])

// ÜBUNG 3


const birthdayList = (param: NameBirthDay[]) => {
    const output: NameBirthDay2[] = param.map(person => {
        const t: NameBirthDay2 = [person[0], daysUntil(person)]
        return t
    })

    return output.sort((a: [string, number], b: [string, number]) => a[1] - b[1])
}

birthdayList([['Marius', new Date('2001-07-19')], ['Yusuf', new Date('1993-09-14')]])

// ÜBUNG 4


function nextBirthday(param: NameBirthDay[]): string {
    return birthdayList(param)[0][0]
}

nextBirthday([['Marius', new Date('2001-07-19')], ['Yusuf', new Date('1993-09-14')]])















































































































































































































































































































































































































































































